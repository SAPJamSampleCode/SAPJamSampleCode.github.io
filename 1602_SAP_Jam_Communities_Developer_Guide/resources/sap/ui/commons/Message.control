<?xml version="1.0" ?>
<control xmlns="http://www.sap.com/sap.ui.library.xsd" >

	<name>Message</name>
	<documentation>Creates the &quot;Message&quot;s to be supplied to the &quot;MessageBar&quot; Control.</documentation>

	<baseType>sap.ui.core/Control</baseType>
	<deprecation since="1.4.0">A new messaging concept will be created in future. Therefore this control might be removed in one of the next versions.</deprecation>
	<properties>
		<property group="Behavior" name="type" type="sap.ui.commons/MessageType">
			<documentation>&quot;Success&quot;, or &quot;Warning&quot;, or &quot;Error&quot; messages. (Mandatory)</documentation>
		</property>
		<property group="Data" name="text" type="sap.ui.core/string">
			<documentation>Message short text. (Mandatory)</documentation>
		</property>
		<property group="Data" name="associatedElementId" type="sap.ui.core/string">
			<documentation>Associated UI element ID. (Optional)
For navigation to error field.</documentation>
		</property>
		<property group="Misc" name="design" type="sap.ui.core/string">
			<documentation>Internal attribute, used to force the display of the &quot;short&quot; or the &quot;long&quot; text only.</documentation>
		</property>
	</properties>
	<methods>
		<method name="bindDetails" type="sap.ui.core/string">
			<documentation>Registers a callback function to be invoked if long text Details are to be made available. This callback function will be supplied the corresponding Message &quot;id&quot;, and should return the HTML string to be displayed within the Message Details Dialog.
E.g.: myMessage.bindDetails(getDetails);
where 
	function getDetails(sId) {... return htmlString;}</documentation>
		</method>
	</methods>
</control>
